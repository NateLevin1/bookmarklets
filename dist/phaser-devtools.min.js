if(console.log("Activated 🛟 Phaser Devtools bookmarklet."),!window.Phaser)throw new Error("This page does not expose any Phaser object :(");if(window.__phaser_devtools_injected)throw new Error("Phaser DevTools are already injected into this page.");window.__phaser_devtools_injected=!0;let oldPush=Array.prototype.push,game;function startDevTools(e){console.log("%cStarting Phaser DevTools...","color: gray"),e.scene.add("__phaser-devtools",PhaserDevTools,!0)}Array.prototype.push=function(...arguments){return(this[0]?.scene||this[0]?.gameObject?.scene)&&(game=this[0]?.scene?.game??this[0].gameObject.scene.game,window.phaserGame=game,console.log("%cSuccessfully found Phaser game!","color: green"),console.log("%cRunning Phaser DevTools v0.1.0, Phaser v"+Phaser.VERSION,"color: rebeccapurple"),Array.prototype.push=oldPush,startDevTools(game)),oldPush.call(this,...arguments)},setTimeout(()=>{game},1e3);class PhaserDevTools extends Phaser.Scene{enabled=!1;constructor(){super()}preload(){}create(){this.sys.game.device.os.desktop||alert('Please note that Phaser DevTools is not optimized for use on non-desktop browsers. Press "OK" to continue.'),game.domContainer||(game.domContainer=document.createElement("div"),game.domContainer.style.cssText=["display: block;","width: "+game.canvas.clientWidth+"px;","height: "+game.canvas.clientHeight+"px;","padding: 0;","margin: 0;",`margin-top: ${game.canvas.style.marginTop};`,`margin-left: ${game.canvas.style.marginLeft};`,"position: absolute;","overflow: hidden;","pointer-events: "+game.config.domPointerEvents+";","transform: scale(1);","transform-origin: left top;"].join(" "),document.body.prepend(game.domContainer),document.body.style.overflow="hidden",document.body.style.width="100%",document.body.style.height="100%",game.scale.refresh()),this.addOptionsDOMElements(),HoverPipeline&&this.sys.game.renderer.pipelines.addPostPipeline(HoverPipeline.KEY,HoverPipeline),console.log("%c⭐️🧑‍💻 Phaser DevTools loaded successfully!","color: green; font-size: 1.2em; font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif"),window.Phaser.Renderer.WebGL.Pipelines.PostFXPipeline||console.error(new Error("This Phaser game is too outdated! Must be on Phaser >3.5, this game is running "+Phaser.VERSION+". Not all features will be supported!"))}update(e,t){this.enabled&&this.loadAllGameObjects()}addOptionsDOMElements(){const t=document.createElement("div");t.oncontextmenu=e=>{e.stopImmediatePropagation()};var e=this.add.dom(0,0,t,`width: 75px; height: 75px; opacity: 0.75; backdrop-filter: blur(2px); overflow: hidden; padding: 1rem; border-radius: 0px 0px 53px 0px;
            background-image: linear-gradient(45deg, hsl(219deg 100% 18% / 0.2) 0%, hsl(307deg 56% 28% / 0.2) 25%, hsl(343deg 60% 43% / 0.2) 50%, hsl(19deg 65% 48% / 0.2) 75%, hsl(49deg 100% 38% / 0.2) 100%);`),e=(e.setOrigin(0,0),e.setAlpha(.75),e.setDepth(1),document.createElement("div"));e.style.cssText="position: relative; width: 100%;",t.appendChild(e);const o=document.createElement("p");o.textContent="Phaser DevTools",o.style.cssText="font-size: 1.7rem; color: white; position: absolute; right: 10px; opacity: 0; top: -150px; filter: drop-shadow(1px 1px 1px black); margin: 0; font-family: sans-serif;";var a=document.createElement("button"),a=(a.style.cssText=`width: 70px; height: 70px; border-radius: 99999px; backdrop-filter: blur(10px); filter: drop-shadow(0px 2px 4px rgba(0,0,0,0.5)); border: none; outline: none; cursor: pointer; display: grid; place-items: center; font-size: 2rem;
        background-image: linear-gradient(45deg, hsl(240deg 100% 20%) 0%, hsl(289deg 100% 21%) 6%, hsl(315deg 100% 27%) 14%, hsl(329deg 100% 36%) 23%, hsl(337deg 100% 43%) 35%, hsl(357deg 91% 59%) 47%, hsl(17deg 100% 59%) 60%, hsl(34deg 100% 53%) 74%, hsl(45deg 100% 50%) 88%, hsl(55deg 100% 50%) 100%);`,a.textContent="🛟",a.onclick=()=>{this.enabled=!this.enabled;var e={easing:"ease-out",duration:300,fill:"forwards"};this.enabled?(t.animate([{opacity:1,width:"300px",height:"300px"}],e),o.animate([{opacity:1,top:"18px"}],e)):(t.animate([{opacity:.75,width:"75px",height:"75px"}],e),o.animate([{opacity:0,top:"-150px"}],e))},e.appendChild(a),e.appendChild(o),document.createElement("div"));a.style.cssText="overflow-y: auto; height: 215px; margin-top: 20px;",t.appendChild(a),a.appendChild(makeInfoText("Injected successfully. You can now use `phaserGame` in the DevTools console to access the Phaser Game object."))}loadAllGameObjects(){this.forAllGameObjects(e=>{!e.getData("__phaser_devtools_loaded")&&e.active&&(e.setData("__phaser_devtools_loaded",!0),e.setInteractive(),e.on("pointerover",()=>{this.enabled&&HoverPipeline&&e.setPostPipeline&&!isBackgroundItem(e,this.sys)&&e.setPostPipeline(HoverPipeline.KEY)}),e.on("pointerout",()=>{this.enabled&&HoverPipeline&&e.resetPostPipeline&&!isBackgroundItem(e,this.sys)&&e.resetPostPipeline()}))})}forAllGameObjects(t){this.getActiveScenes().forEach(e=>e.children.list.forEach(t))}getActiveScenes(){return game.scene.getScenes(!0).filter(e=>!(e instanceof PhaserDevTools))}}function makeInfoText(e){var t=document.createElement("p");return t.style.cssText="margin: 0.1rem 0; color: white; filter: drop-shadow(1px 1px 1px black);",t.textContent=e,t}let HoverPipeline;function isBackgroundItem(e,t){return e?.displayWidth>t.scale.width||e?.displayHeight>t.scale.height}window.Phaser.Renderer.WebGL.Pipelines.PostFXPipeline&&(HoverPipeline=class extends Phaser.Renderer.WebGL.Pipelines.PostFXPipeline{static KEY="__phaser_devtools_hover";constructor(e){super({game:e,renderer:e.renderer,fragShader:"#define SHADER_NAME PHASER_DEVTOOLS_HOVE\nprecision mediump float;uniform sampler2D uMainSampler;uniform vec2 uTextureSize;varying vec2 outTexCoord;uniform float time;float rainbowSpeed = 3.0;vec3 rainbow(float level) {\nfloat r = float(level <= 2.0) + float(level > 4.0) * 1.0;float g = max(1.0 - abs(level - 2.0) * 0.4, 0.0);float b = (1.0 - (level - 4.0) * 0.5) * float(level >= 4.0);return vec3(r, g, b);}\nvec4 smoothRainbow(float x)\n{\nfloat level1 = floor(x*6.0);float level2 = min(6.0, floor(x*6.0) + 1.0);vec3 a = rainbow(level1);vec3 b = rainbow(level2);return vec4(mix(a, b, fract(x*6.0)), 1);}\nvoid main(void) \n{\nvec4 texture = texture2D(uMainSampler, outTexCoord);vec4 color = texture;float level = (1.0 / rainbowSpeed) * mod(time, rainbowSpeed);color = smoothRainbow(level);float surroundingAlphaSum =\ntexture2D(uMainSampler, outTexCoord + vec2(-0.0001, -0.0001)).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0,      -0.0001)).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0,       -0.002)).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0.0001, -0.0001)).a + \ntexture2D(uMainSampler, outTexCoord + vec2(-0.0001,  0     )).a + \ntexture2D(uMainSampler, outTexCoord + vec2( -0.001,  0     )).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0.0001,  0     )).a + \ntexture2D(uMainSampler, outTexCoord + vec2(  0.001,  0     )).a + \ntexture2D(uMainSampler, outTexCoord + vec2(-0.0001,  0.0001)).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0,       0.0001)).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0,        0.002)).a + \ntexture2D(uMainSampler, outTexCoord + vec2( 0.0001,  0.0001)).a;if(texture.a == 0.0 && surroundingAlphaSum > 0.0) {\ngl_FragColor = vec4(0.85,0.85,0.85,1) + color * 0.15;} else if(texture.a > 0.1) {\ngl_FragColor = texture * 0.85 + color * 0.15;} else {\ngl_FragColor = texture;}}"})}onRender(e,t){this.set1f("time",e.time.now/1e3)}});